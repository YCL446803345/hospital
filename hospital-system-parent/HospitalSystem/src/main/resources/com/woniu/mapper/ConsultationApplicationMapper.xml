<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.mapper.ConsultationApplicationMapper">
  <resultMap id="BaseResultMap" type="com.woniu.entity.ConsultationApplication">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
    <result column="patient_id" jdbcType="INTEGER" property="patientId" />
    <result column="consultation_date" jdbcType="TIMESTAMP" property="consultationDate" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="consultation_emergency_id" jdbcType="INTEGER" property="consultationEmergencyId" />
    <result column="consultation_category_id" jdbcType="INTEGER" property="consultationCategoryId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="spare3" jdbcType="VARCHAR" property="spare3" />
    <result column="spare2" jdbcType="VARCHAR" property="spare2" />
    <result column="spare1" jdbcType="VARCHAR" property="spare1" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, doctor_id, patient_id, consultation_date, reason, desc, consultation_emergency_id, 
    consultation_category_id, status, spare3, spare2, spare1
  </sql>
  <select id="selectByExample" parameterType="com.woniu.entity.ConsultationApplicationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HOS_consultation_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from HOS_consultation_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from HOS_consultation_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.entity.ConsultationApplicationExample">
    delete from HOS_consultation_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.entity.ConsultationApplication">
    insert into HOS_consultation_application (id, doctor_id, patient_id, 
      consultation_date, reason, desc, 
      consultation_emergency_id, consultation_category_id, 
      status, spare3, spare2, 
      spare1)
    values (#{id,jdbcType=INTEGER}, #{doctorId,jdbcType=INTEGER}, #{patientId,jdbcType=INTEGER}, 
      #{consultationDate,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{consultationEmergencyId,jdbcType=INTEGER}, #{consultationCategoryId,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR}, #{spare2,jdbcType=VARCHAR}, 
      #{spare1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.entity.ConsultationApplication">
    insert into HOS_consultation_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="consultationDate != null">
        consultation_date,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="consultationEmergencyId != null">
        consultation_emergency_id,
      </if>
      <if test="consultationCategoryId != null">
        consultation_category_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="spare3 != null">
        spare3,
      </if>
      <if test="spare2 != null">
        spare2,
      </if>
      <if test="spare1 != null">
        spare1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null">
        #{patientId,jdbcType=INTEGER},
      </if>
      <if test="consultationDate != null">
        #{consultationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="consultationEmergencyId != null">
        #{consultationEmergencyId,jdbcType=INTEGER},
      </if>
      <if test="consultationCategoryId != null">
        #{consultationCategoryId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare1 != null">
        #{spare1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.entity.ConsultationApplicationExample" resultType="java.lang.Long">
    select count(*) from HOS_consultation_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update HOS_consultation_application
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.patientId != null">
        patient_id = #{record.patientId,jdbcType=INTEGER},
      </if>
      <if test="record.consultationDate != null">
        consultation_date = #{record.consultationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.consultationEmergencyId != null">
        consultation_emergency_id = #{record.consultationEmergencyId,jdbcType=INTEGER},
      </if>
      <if test="record.consultationCategoryId != null">
        consultation_category_id = #{record.consultationCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.spare3 != null">
        spare3 = #{record.spare3,jdbcType=VARCHAR},
      </if>
      <if test="record.spare2 != null">
        spare2 = #{record.spare2,jdbcType=VARCHAR},
      </if>
      <if test="record.spare1 != null">
        spare1 = #{record.spare1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update HOS_consultation_application
    set id = #{record.id,jdbcType=INTEGER},
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
      patient_id = #{record.patientId,jdbcType=INTEGER},
      consultation_date = #{record.consultationDate,jdbcType=TIMESTAMP},
      reason = #{record.reason,jdbcType=VARCHAR},
      desc = #{record.desc,jdbcType=VARCHAR},
      consultation_emergency_id = #{record.consultationEmergencyId,jdbcType=INTEGER},
      consultation_category_id = #{record.consultationCategoryId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      spare3 = #{record.spare3,jdbcType=VARCHAR},
      spare2 = #{record.spare2,jdbcType=VARCHAR},
      spare1 = #{record.spare1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.entity.ConsultationApplication">
    update HOS_consultation_application
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=INTEGER},
      </if>
      <if test="consultationDate != null">
        consultation_date = #{consultationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="consultationEmergencyId != null">
        consultation_emergency_id = #{consultationEmergencyId,jdbcType=INTEGER},
      </if>
      <if test="consultationCategoryId != null">
        consultation_category_id = #{consultationCategoryId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        spare2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare1 != null">
        spare1 = #{spare1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.entity.ConsultationApplication">
    update HOS_consultation_application
    set doctor_id = #{doctorId,jdbcType=INTEGER},
      patient_id = #{patientId,jdbcType=INTEGER},
      consultation_date = #{consultationDate,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      consultation_emergency_id = #{consultationEmergencyId,jdbcType=INTEGER},
      consultation_category_id = #{consultationCategoryId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare1 = #{spare1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--queryConsultationApplicationList-->
  <!--医生站分页模糊查询会诊列表-->
  <select id="queryConsultationApplicationList" resultType="ConsultationApplication">
    select c.id,w.name doctorName,p.name patientName,c.consultation_emergency_id,c.consultation_category_id,
    c.consultation_date,c.reason,c.desc,c.status,c.doctor_id,c.patient_id
    from HOS_consultation_application c
    inner join HOS_worker w on c.doctor_id = w.id
    inner join HOS_patient p on c.patient_id = p.id

    <where>
    <if test="consultationEmergencyId != null and consultationEmergencyId !=''">c.consultation_emergency_id = #{consultationEmergencyId}</if>
    <if test="consultationCategoryId != null and consultationCategoryId !=''">c.consultation_category_id = #{consultationCategoryId}</if>
    <if test="status != null and status != ''">c.status = #{status}</if>
    <if test="startDate != null and startDate != ''">and c.consultation_date &gt;= #{startDate}</if>
    <if test="endDate != null and endDate != ''">and c.consultation_date &lt;= #{endDate}</if>
   </where> and c.status in (1,2) order by c.consultation_date desc
  </select>
</mapper>