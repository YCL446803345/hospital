<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.mapper.MedicalAdviceMapper">
  <resultMap id="BaseResultMap" type="com.woniu.entity.MedicalAdvice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
    <result column="patient_id" jdbcType="INTEGER" property="patientId" />
    <result column="advice_category" jdbcType="INTEGER" property="adviceCategory" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="advice_description" jdbcType="VARCHAR" property="adviceDescription" />
    <result column="advice_status" jdbcType="INTEGER" property="adviceStatus" />
    <result column="spare1" jdbcType="VARCHAR" property="spare1" />
    <result column="spare2" jdbcType="VARCHAR" property="spare2" />
    <result column="spare3" jdbcType="VARCHAR" property="spare3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, doctor_id, patient_id, advice_category, project_id, create_time, advice_description, 
    advice_status, spare1, spare2, spare3
  </sql>
  <select id="selectByExample" parameterType="com.woniu.entity.MedicalAdviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HOS_medical_advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from HOS_medical_advice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from HOS_medical_advice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.entity.MedicalAdviceExample">
    delete from HOS_medical_advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.entity.MedicalAdvice">
    insert into HOS_medical_advice (id, doctor_id, patient_id, 
      advice_category, project_id, create_time, 
      advice_description, advice_status, spare1, 
      spare2, spare3)
    values (#{id,jdbcType=INTEGER}, #{doctorId,jdbcType=INTEGER}, #{patientId,jdbcType=INTEGER}, 
      #{adviceCategory,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{adviceDescription,jdbcType=VARCHAR}, #{adviceStatus,jdbcType=INTEGER}, #{spare1,jdbcType=VARCHAR}, 
      #{spare2,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.entity.MedicalAdvice">
    insert into HOS_medical_advice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="adviceCategory != null">
        advice_category,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="adviceDescription != null">
        advice_description,
      </if>
      <if test="adviceStatus != null">
        advice_status,
      </if>
      <if test="spare1 != null">
        spare1,
      </if>
      <if test="spare2 != null">
        spare2,
      </if>
      <if test="spare3 != null">
        spare3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null">
        #{patientId,jdbcType=INTEGER},
      </if>
      <if test="adviceCategory != null">
        #{adviceCategory,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adviceDescription != null">
        #{adviceDescription,jdbcType=VARCHAR},
      </if>
      <if test="adviceStatus != null">
        #{adviceStatus,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null">
        #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        #{spare3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.entity.MedicalAdviceExample" resultType="java.lang.Long">
    select count(*) from HOS_medical_advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update HOS_medical_advice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.patientId != null">
        patient_id = #{record.patientId,jdbcType=INTEGER},
      </if>
      <if test="record.adviceCategory != null">
        advice_category = #{record.adviceCategory,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adviceDescription != null">
        advice_description = #{record.adviceDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.adviceStatus != null">
        advice_status = #{record.adviceStatus,jdbcType=INTEGER},
      </if>
      <if test="record.spare1 != null">
        spare1 = #{record.spare1,jdbcType=VARCHAR},
      </if>
      <if test="record.spare2 != null">
        spare2 = #{record.spare2,jdbcType=VARCHAR},
      </if>
      <if test="record.spare3 != null">
        spare3 = #{record.spare3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update HOS_medical_advice
    set id = #{record.id,jdbcType=INTEGER},
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
      patient_id = #{record.patientId,jdbcType=INTEGER},
      advice_category = #{record.adviceCategory,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      advice_description = #{record.adviceDescription,jdbcType=VARCHAR},
      advice_status = #{record.adviceStatus,jdbcType=INTEGER},
      spare1 = #{record.spare1,jdbcType=VARCHAR},
      spare2 = #{record.spare2,jdbcType=VARCHAR},
      spare3 = #{record.spare3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.entity.MedicalAdvice">
    update HOS_medical_advice
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=INTEGER},
      </if>
      <if test="adviceCategory != null">
        advice_category = #{adviceCategory,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adviceDescription != null">
        advice_description = #{adviceDescription,jdbcType=VARCHAR},
      </if>
      <if test="adviceStatus != null">
        advice_status = #{adviceStatus,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null">
        spare1 = #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        spare2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.entity.MedicalAdvice">
    update HOS_medical_advice
    set doctor_id = #{doctorId,jdbcType=INTEGER},
      patient_id = #{patientId,jdbcType=INTEGER},
      advice_category = #{adviceCategory,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      advice_description = #{adviceDescription,jdbcType=VARCHAR},
      advice_status = #{adviceStatus,jdbcType=INTEGER},
      spare1 = #{spare1,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--queryMedicalAdviceList-->
  <!--医生站分页模糊查询医嘱列表-->
  <select id="queryMedicalAdviceList" resultType="MedicalAdvice">
    select m.id,r.name doctorName,p.name patientName,m.advice_category,m.project_id,
    m.create_time,m.advice_description,m.advice_status,m.doctor_id,m.patient_id
    from HOS_medical_advice m
    inner join HOS_worker r on m.doctor_id = r.id
    inner join HOS_patient p on m.patient_id = p.id
    <where>
      <if test="adviceCategory != null and adviceCategory !=''">m.advice_category = #{adviceCategory}</if>
      <if test="adviceStatus != null and adviceStatus != ''">m.advice_status = #{adviceStatus}</if>
      <if test="startDate != null and startDate != ''">and m.create_time &gt;= #{startDate}</if>
      <if test="endDate != null and endDate != ''">and m.create_time &lt;= #{endDate}</if>
    </where> and m.advice_status in(1,2,3) order by m.create_time desc
  </select>

<!--  findMedicalAdviceById-->
<!--  医生站根据Id查询医嘱(关联查询详细)-->
  <select id="findMedicalAdviceById" resultType="MedicalAdvice">
    select m.id, r.name workerName,p.name patientName,c.advice_category adviceCategoryName,t.name projectName,
    m.create_time,m.advice_description,m.advice_status
    from HOS_medical_advice m
    inner join HOS_worker r on m.doctor_id = r.id
    inner join HOS_patient p on m.patient_id = p.id
    inner join HOS_medical_advice_category c on m.advice_category = c.id
    inner join HOS_project t on m.project_id = t.id
    where m.id = #{id}
  </select>


</mapper>